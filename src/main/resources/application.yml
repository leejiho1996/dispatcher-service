server:
  port: 9003

spring:
  application:
    name: dispatcher-service
  cloud:
    function:
      definition: pack|label
    stream:
      bindings:
        packlabel-in-0: # 입력 바인딩
          destination: order-accepted # 바인더를 연결할 대상의 메시지 브로커 내에서의 이름 (래빗 MQ의 익스체인지)
          group: ${spring.application.name} # 소비자 그룹
        packlabel-out-0: # 출력 바인딩
          destination: order-dispatched # 바인더를 연결할 대상의 메시지 브로커 내에서의 이름 (래빗 MQ의 익스체인지)
  rabbitmq:
    host: localhost
    port: 5672
    username: user
    password: password
    connection-timeout: 5s

management:
  endpoints:
    web:
      exposure:
        include: health # /actuator/health 엔드포인트를 노출한다.
  endpoint:
    health:
      show-details: always # 상세정보 제공
      show-components: always # 구성요소 정보 제공
      probes:
        enabled: true # 활성 및 준비 상태 프로브 지원 활성화

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"